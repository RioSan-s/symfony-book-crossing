<?php

namespace NonEfTech\BookCrossing\Repository;

use Doctrine\ORM\EntityRepository;
use NonEfTech\BookCrossing\Entity\PointRepositoryInterface;

class PointDoctrineRepository extends EntityRepository implements
    PointRepositoryInterface
{
    private const REPLACED_CRITERIA = [
        'country' => 'address.country',
        'city' => 'address.city',
        'street' => 'address.street',
        'home' => 'address.home',
        'flat' => 'address.flat',
        'phone_number'=>'phoneNumber.phoneNumber'
    ];

    /**
     * @inheritDoc
     */
    public function findBy(array $criteria, ?array $orderBy = null, $limit = null, $offset = null): array
    {
        $preparedCriteria = [];
        foreach ($criteria as $criteriaName => $criteriaValue) {
            if (array_key_exists($criteriaName, self::REPLACED_CRITERIA)) {
                $preparedCriteria[self::REPLACED_CRITERIA[$criteriaName]] = $criteriaValue;
            } else {
                $preparedCriteria[$criteriaName]=$criteriaValue;
            }
        }

        return parent::findBy($preparedCriteria, $orderBy, $limit, $offset); // TODO: Change the autogenerated stub
    }

}