<?php

namespace NonEfTech\BookCrossing\Repository;

use Doctrine\ORM\EntityRepository;
use NonEfTech\BookCrossing\Entity\PointRepositoryInterface;

class PointDoctrineRepository extends EntityRepository implements
    PointRepositoryInterface
{
    private const REPLACED_CRITERIA =[
      'address' =>
          [
              'address.country',
              'address.city',
              'address.street',
              'address.home',
              'address.flat',
          ]
    ];

    /**
     * @inheritDoc
     */
    public function findBy(array $criteria, ?array $orderBy = null, $limit = null, $offset = null):array
    {
        $preparedCriteria = [];
        foreach ($criteria as $key=>$value)
        {
            if(array_key_exists($key, self::REPLACED_CRITERIA))
            {
                $explodeCriteria=explode(',', str_replace(" ", '', $value));

                foreach(self::REPLACED_CRITERIA[$key] as $addressField => $currentField)
                {
                    $preparedCriteria[$currentField]=$explodeCriteria
                    [$addressField];
                }


            }
            else
            {
                $preparedCriteria[$key]=$value;
            }

        }

        return parent::findBy($preparedCriteria, $orderBy, $limit, $offset); // TODO: Change the autogenerated stub
    }

}