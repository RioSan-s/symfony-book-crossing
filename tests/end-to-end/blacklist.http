### тестирование добавление человека в blacklist со статусом banned
POST http://localhost:8086/blacklist/add
Content-Type: application/json

{
  "description":"Забанили по причине ужасного обращения с книгами",
  "participant": 5,
  "date": "2022-04-17 19:58:30",
  "status": "banned"
}


> {%
client.test("тестирование добавление человека в blacklist со статусом banned", function (){
  client.assert(response.status === 201, "Ожидается код '201'. Реальный код '" + response.status + "'.");
  client.assert(response.contentType.mimeType === "application/json", "Ожидаю applicationType, а фактически" + response.contentType.mimeType + "'.");
client.assert(response.body["participantFIO"] === "Лысова Антонина Егоровна", "некорректный участник обмена");
client.assert(response.body["status"] === "banned", "некорректный статус");
client.assert(response.body["description"] === "Забанили по причине ужасного обращения с книгами");
client.assert(response.body["date"] === "2022-04-17 19:58:30", "некорректное время бана");
});
 %}


### тестирование добавление человека в blacklist со статусом unBanned
POST http://localhost:8086/blacklist/add
Content-Type: application/json

{
  "description":"Разбанили, он искупил свою вину",
  "participant": 5,
  "date": "2022-04-17 20:00:00",
  "status": "unBanned"
}


> {%
client.test("тестирование добавление человека в blacklist со статусом unBanned", function (){
  client.assert(response.status === 201, "Ожидается код '201'. Реальный код '" + response.status + "'.");
  client.assert(response.contentType.mimeType === "application/json", "Ожидаю applicationType, а фактически" + response.contentType.mimeType + "'.");
client.assert(response.body["participantFIO"] === "Лысова Антонина Егоровна", "некорректный участник обмена");
client.assert(response.body["status"] === "unBanned", "некорректный статус");
client.assert(response.body["description"] === "Разбанили, он искупил свою вину");
client.assert(response.body["date"] === "2022-04-17 20:00:00", "некорректное время бана");
});
 %}

